trigger:
  branches:
    include:
      - main

variables:
  - group: infra-vars-dev

stages:
  # ------------------------
  # Build & Test Stage
  # ------------------------
- stage: Build
  displayName: 'Build and Push Image'
  variables:
    - group: infra-vars-dev
  jobs:
    - job: Build
      pool:
        name: abb    # custom self-hosted agent pool
      steps:
        #  Checkout the repository
        - checkout: self

        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: 'Use Node.js 18'

        #  Install, Lint, Test and Generate JUnit Report
        - script: |
            npm install
            npm run lint
            JEST_JUNIT_OUTPUT=$(Build.SourcesDirectory)/simple-node-ui/junit.xml npm test -- --coverage --reporters=default --reporters=jest-junit
          displayName: 'Install, Lint, Test'
          workingDirectory: 'simple-node-ui'

        #  Publish JUnit Results to Test Tab
        - task: PublishTestResults@2
          inputs:
            testResultsFiles: '$(Build.SourcesDirectory)/simple-node-ui/junit.xml'
            testResultsFormat: 'JUnit'
          displayName: 'Publish Test Results to ADO'

        #  Publish the junit.xml as downloadable artifact
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)/simple-node-ui/junit.xml'
            ArtifactName: 'TestResults'
            publishLocation: 'Container'
          displayName: 'Publish Test Report Artifact'

        - script: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            az --version
          displayName: 'Install Azure CLI 2.55.0'

        - task: AzureCLI@2
          inputs:
            azureSubscription: '$(AZURE_SUBSCRIPTION)' # service connection name
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            workingDirectory: '$(Build.SourcesDirectory)/simple-node-ui'
            inlineScript: |
              az acr build \
                --registry $(ACR_NAME) \
                --image $(imageRepository):$(tag) \
                --file $(dockerfilePath) \
                .

  # ------------------------
  # Deploy Stage
  # ------------------------

#dev
- stage: devDeployment
  displayName: 'Deploy to dev'
  variables:
    - group: infra-vars-dev
  dependsOn: Build
  jobs:
    - deployment: DeployToAKS
      displayName: 'Helm Deploy'
      environment: 'Dev'
      pool:
        name: abb
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              - script: |
                  sudo apt-get update
                  sudo apt-get install -y unzip
                displayName: 'Install unzip for Helm'

              - script: |
                  curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                  az --version
                displayName: 'Install Azure CLI 2.55.0'

              - script: |
                  sudo az aks install-cli
                  kubectl version --client
                displayName: 'Install kubectl'

              # Install Helm
              - task: HelmInstaller@1
                inputs:
                  workingDirectory: '$(Build.SourcesDirectory)'
                  helmVersionToInstall: 'latest'

              # Deploy with Helm
              - task: HelmDeploy@1
                inputs:
                  connectionType: 'Azure Resource Manager'
                  azureSubscription: '$(AZURE_SUBSCRIPTION)'   # Ensure correct service connection name
                  azureResourceGroup: '$(RESOURCE_GROUP)'
                  kubernetesCluster: '$(AKS_CLUSTER)'
                  namespace: 'simple-node-ui'
                  command: 'upgrade'
                  chartType: 'FilePath'
                  chartPath: '$(Build.SourcesDirectory)/simple-node-ui/$(chartPath)'
                  releaseName: '$(helmReleaseName)'
                  valueFile: '$(Build.SourcesDirectory)/simple-node-ui/$(chartPath)/values.yaml'
                  arguments: >
                    --install
                    --create-namespace
                    --set image.repository=$(CONTAINER_REGISTRY)/$(imageRepository)
                    --set image.tag=$(tag)

#production
- stage: testEnvDeployment
  displayName: 'Deploy to test'
  variables:
    - group: infra-vars-test
  dependsOn: Build
  jobs:
    - deployment: DeployToAKS
      displayName: 'Helm Deploy'
      environment: 'Test'
      pool:
        name: abb
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              - script: |
                  sudo apt-get update
                  sudo apt-get install -y unzip
                displayName: 'Install unzip for Helm'

              - script: |
                  curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                  az --version
                displayName: 'Install Azure CLI 2.55.0'

              - script: |
                  sudo az aks install-cli
                  kubectl version --client
                displayName: 'Install kubectl'

              # Install Helm
              - task: HelmInstaller@1
                inputs:
                  workingDirectory: '$(Build.SourcesDirectory)'
                  helmVersionToInstall: 'latest'

              # Deploy with Helm
              - task: HelmDeploy@1
                inputs:
                  connectionType: 'Azure Resource Manager'
                  azureSubscription: '$(AZURE_SUBSCRIPTION)'   # Ensure correct service connection name
                  azureResourceGroup: '$(RESOURCE_GROUP)'
                  kubernetesCluster: '$(AKS_CLUSTER)'
                  namespace: 'test'
                  command: 'upgrade'
                  chartType: 'FilePath'
                  chartPath: '$(Build.SourcesDirectory)/simple-node-ui/$(chartPath)'
                  releaseName: '$(helmReleaseName)'
                  valueFile: '$(Build.SourcesDirectory)/simple-node-ui/$(chartPath)/values.yaml'
                  arguments: >
                    --install
                    --create-namespace
                    --set image.repository=$(CONTAINER_REGISTRY)/$(imageRepository)
                    --set image.tag=$(tag)



#production
- stage: ProdDeployment
  displayName: 'Deploy to prod'
  variables:
    - group: infra-vars-prod
  dependsOn: Build
  jobs:
    - deployment: DeployToAKS
      displayName: 'Helm Deploy'
      environment: 'production'
      pool:
        name: abb
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              - script: |
                  sudo apt-get update
                  sudo apt-get install -y unzip
                displayName: 'Install unzip for Helm'

              - script: |
                  curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                  az --version
                displayName: 'Install Azure CLI 2.55.0'

              - script: |
                  sudo az aks install-cli
                  kubectl version --client
                displayName: 'Install kubectl'

              # Install Helm
              - task: HelmInstaller@1
                inputs:
                  workingDirectory: '$(Build.SourcesDirectory)'
                  helmVersionToInstall: 'latest'

              # Deploy with Helm
              - task: HelmDeploy@1
                inputs:
                  connectionType: 'Azure Resource Manager'
                  azureSubscription: '$(AZURE_SUBSCRIPTION)'   # Ensure correct service connection name
                  azureResourceGroup: '$(RESOURCE_GROUP)'
                  kubernetesCluster: '$(AKS_CLUSTER)'
                  namespace: 'prod'
                  command: 'upgrade'
                  chartType: 'FilePath'
                  chartPath: '$(Build.SourcesDirectory)/simple-node-ui/$(chartPath)'
                  releaseName: '$(helmReleaseName)'
                  valueFile: '$(Build.SourcesDirectory)/simple-node-ui/$(chartPath)/values.yaml'
                  arguments: >
                    --install
                    --create-namespace
                    --set image.repository=$(CONTAINER_REGISTRY)/$(imageRepository)
                    --set image.tag=$(tag)
